#!/usr/bin/pooscript
# init - The Poodillion init system
# First process that runs on boot (PID 1)

print("""
╔═══════════════════════════════════════════════════════════════╗
║                                                               ║
║   ██████╗  ██████╗  ██████╗ ██████╗ ██╗██╗     ██╗ ██████╗  ║
║   ██╔══██╗██╔═══██╗██╔═══██╗██╔══██╗██║██║     ██║██╔═══██╗ ║
║   ██████╔╝██║   ██║██║   ██║██║  ██║██║██║     ██║██║   ██║ ║
║   ██╔═══╝ ██║   ██║██║   ██║██║  ██║██║██║     ██║██║   ██║ ║
║   ██║     ╚██████╔╝╚██████╔╝██████╔╝██║███████╗██║╚██████╔╝ ║
║   ╚═╝      ╚═════╝  ╚═════╝ ╚═════╝ ╚═╝╚══════╝╚═╝ ╚═════╝  ║
║                                                               ║
║              Virtual Unix Hacking Environment                ║
║                    Version 2.0 - PooScript                   ║
║                                                               ║
╚═══════════════════════════════════════════════════════════════╝

[  OK  ] Reached target PooScript Environment
[  OK  ] Started Poodillion VFS
[  OK  ] Started Process Manager
[  OK  ] Mounted virtual filesystems
""")

# Check if we're running as PID 1
if process.getpid() == 1:
    print("[  OK  ] init is running as PID 1")
else:
    error(f"[WARN ] init is running as PID {process.getpid()}, expected PID 1")

# Initialize system services
print("[  OK  ] Starting system services...")

# Check for critical binaries
critical_bins = ['/bin/pooshell', '/bin/login', '/bin/ls', '/bin/ps']
all_ok = True

for binary in critical_bins:
    if vfs.exists(binary):
        print(f"[  OK  ] Found {binary}")
    else:
        error(f"[FAILED] Missing {binary}")
        all_ok = False

if all_ok:
    print("\n[  OK  ] Poodillion boot complete!")
    print("[  OK  ] System is ready for hacking\n")
else:
    error("\n[FAILED] Boot completed with errors\n")

exit(0)
