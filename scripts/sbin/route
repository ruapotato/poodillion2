#!/usr/bin/pooscript
# route - show / manipulate the IP routing table

# Get system interface
system = process.get_system()
if not system:
    error("route: Cannot access system")
    exit(1)

# Get network
net = process.get_network()

if len(args) == 0 or args[0] == '-n':
    # Display routing table
    print("Kernel IP routing table")
    print("Destination     Gateway         Genmask         Flags Metric Ref    Use Iface")

    # Default route (if exists)
    if system.default_gateway:
        print(f"0.0.0.0         {system.default_gateway:15s} 0.0.0.0         UG    0      0        0 eth0")

    # Local network
    local_net = '.'.join(system.local_ip.split('.')[:3]) + '.0'
    print(f"{local_net:15s} 0.0.0.0         255.255.255.0   U     0      0        0 eth0")

    # Custom routes
    for route in system.routing_table:
        dest = route.get('destination', '0.0.0.0')
        gateway = route.get('gateway', '0.0.0.0')
        netmask = route.get('netmask', '255.255.255.0')
        iface = route.get('interface', 'eth0')
        flags = route.get('flags', 'U')

        print(f"{dest:15s} {gateway:15s} {netmask:15s} {flags:5s} 0      0        0 {iface}")

    exit(0)

elif args[0] == 'add':
    # Add route: route add -net 192.168.1.0 netmask 255.255.255.0 gw 10.0.0.1
    if process.uid != 0:
        error("route: Permission denied (you must be root)")
        exit(1)

    # Parse options
    destination = None
    gateway = None
    netmask = '255.255.255.0'
    is_net = False

    i = 1
    while i < len(args):
        arg = args[i]

        if arg == '-net':
            is_net = True
            if i + 1 < len(args):
                destination = args[i + 1]
                i += 2
            else:
                error("route: option requires an argument -- '-net'")
                exit(1)

        elif arg == '-host':
            is_net = False
            if i + 1 < len(args):
                destination = args[i + 1]
                i += 2
            else:
                error("route: option requires an argument -- '-host'")
                exit(1)

        elif arg == 'netmask':
            if i + 1 < len(args):
                netmask = args[i + 1]
                i += 2
            else:
                error("route: option requires an argument -- 'netmask'")
                exit(1)

        elif arg == 'gw' or arg == 'gateway':
            if i + 1 < len(args):
                gateway = args[i + 1]
                i += 2
            else:
                error("route: option requires an argument -- 'gw'")
                exit(1)

        else:
            i += 1

    if not destination:
        error("route: no destination specified")
        exit(1)

    # Add the route
    route_entry = {
        'destination': destination,
        'gateway': gateway if gateway else '0.0.0.0',
        'netmask': netmask,
        'interface': 'eth0',
        'flags': 'UG' if gateway else 'U'
    }

    system.add_route(route_entry)
    exit(0)

elif args[0] == 'del':
    # Delete route
    if process.uid != 0:
        error("route: Permission denied (you must be root)")
        exit(1)

    error("route: delete not implemented yet")
    exit(1)

else:
    error(f"route: unknown command '{args[0]}'")
    error("Usage: route [-n] (show routes)")
    error("       route add -net <network> netmask <mask> gw <gateway>")
    exit(1)
