#!/usr/bin/virtualscript
# wc - word, line, character, and byte count

# Parse options
show_lines = '-l' in args
show_words = '-w' in args
show_chars = '-c' in args

# If no options, show all
if not (show_lines or show_words or show_chars):
    show_lines = show_words = show_chars = True

# Get files
files = [arg for arg in args if not arg.startswith('-')]

def count_text(text):
    lines = text.count('\n')
    words = len(text.split())
    chars = len(text)
    return lines, words, chars

if len(files) == 0:
    # Count stdin
    lines, words, chars = count_text(stdin)
    parts = []
    if show_lines:
        parts.append(f"{lines:8}")
    if show_words:
        parts.append(f"{words:8}")
    if show_chars:
        parts.append(f"{chars:8}")
    print(' '.join(parts))
else:
    total_lines = total_words = total_chars = 0
    for filepath in files:
        try:
            content = vfs.read(filepath)
            lines, words, chars = count_text(content)
            total_lines += lines
            total_words += words
            total_chars += chars

            parts = []
            if show_lines:
                parts.append(f"{lines:8}")
            if show_words:
                parts.append(f"{words:8}")
            if show_chars:
                parts.append(f"{chars:8}")
            parts.append(filepath)
            print(' '.join(parts))
        except:
            error(f"wc: {filepath}: No such file or directory")
            exit(1)

    # Show total if multiple files
    if len(files) > 1:
        parts = []
        if show_lines:
            parts.append(f"{total_lines:8}")
        if show_words:
            parts.append(f"{total_words:8}")
        if show_chars:
            parts.append(f"{total_chars:8}")
        parts.append('total')
        print(' '.join(parts))

exit(0)
