#!/usr/bin/pooscript
# rm - remove files or directories

if len(args) == 0:
    error("rm: missing operand")
    exit(1)

# Parse options
force = '-f' in args
recursive = '-r' in args or '-rf' in args or '-fr' in args
paths = [arg for arg in args if not arg.startswith('-')]

def remove_recursive(path):
    """Recursively remove a directory and its contents"""
    # Check if path exists
    inode = vfs.stat(path)
    if not inode:
        if not force:
            error(f"rm: cannot remove '{path}': No such file or directory")
            return False
        return True

    # If it's a directory and recursive flag is set
    if inode.is_dir():
        if not recursive:
            error(f"rm: cannot remove '{path}': Is a directory")
            return False

        # List directory contents
        try:
            entries = vfs.list(path)
            for entry in entries:
                if entry not in ('.', '..'):
                    entry_path = path.rstrip('/') + '/' + entry
                    if not remove_recursive(entry_path):
                        return False
        except RuntimeError as e:
            if not force:
                error(f"rm: cannot remove '{path}': {e}")
                return False
            return True

    # Remove the file or empty directory
    try:
        vfs.unlink(path)
        return True
    except RuntimeError as e:
        if not force:
            error(f"rm: cannot remove '{path}': {e}")
            return False
        return True

# Remove each path
exit_code = 0
for path in paths:
    if not remove_recursive(path):
        exit_code = 1

exit(exit_code)
