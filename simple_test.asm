; Generated by Mini-Nim Compiler
bits 32

section .text
global _start

_start:
    call main
    ; Halt (infinite loop)
.halt:
    hlt
    jmp .halt
    
add:
    push ebp
    mov ebp, esp
    mov eax, [ebp+8]
    push eax
    mov eax, [ebp+12]
    mov ebx, eax
    pop eax
    add eax, ebx
    jmp .return
.return:
    mov esp, ebp
    pop ebp
    ret
    
main:
    push ebp
    mov ebp, esp
    mov eax, 10
    mov [ebp-4], eax
    mov eax, 20
    mov [ebp-8], eax
    mov eax, [ebp-8]
    push eax
    mov eax, [ebp-4]
    push eax
    call add
    add esp, 8
    mov [ebp-12], eax
.return:
    mov esp, ebp
    pop ebp
    ret