; Generated by Mini-Nim Compiler
bits 32

extern serial_init
extern serial_print
extern serial_putchar

section .data
str_0: db "bin/  home/  root/  usr/  tmp/", 0
str_1: db "Welcome to PoodillionOS!", 0
str_2: db "A real operating system written in Mini-Nim", 0
str_3: db "Echo: Hello from Mini-Nim shell!", 0
str_4: db "Available commands:", 0
str_5: db "  ls    - List files", 0
str_6: db "  cat   - Display file", 0
str_7: db "  echo  - Print text", 0
str_8: db "  help  - Show this help", 0
str_9: db "========================================", 0
str_10: db "  PoodillionOS v0.1 - Mini-Nim Shell", 0
str_11: db "========================================", 0
str_12: db "Built with Mini-Nim compiler!", 0
str_13: db "Type 'help' for available commands", 0
str_14: db "root@poodillion:~# ", 0
str_15: db "ls", 0
str_16: db "root@poodillion:~# ", 0
str_17: db "cat welcome.txt", 0
str_18: db "root@poodillion:~# ", 0
str_19: db "echo", 0
str_20: db "root@poodillion:~# ", 0
str_21: db "help", 0
str_22: db "root@poodillion:~# ", 0

section .text
global mininim_kernel_main

    
println:
    push ebp
    mov ebp, esp
    mov eax, [ebp+8]
    push eax
    call serial_print
    add esp, 4
    mov eax, 10
    push eax
    call serial_putchar
    add esp, 4
println_return:
    mov esp, ebp
    pop ebp
    ret
    
str_eq:
    push ebp
    mov ebp, esp
    mov eax, 0
    mov [ebp-4], eax
while_start0:
    mov eax, 1
    test eax, eax
    jz while_end1
    mov eax, [ebp-4]
    mov ebx, eax
    mov eax, [ebp+8]
    add eax, ebx
    mov eax, [eax]
    mov [ebp-5], eax
    mov eax, [ebp-4]
    mov ebx, eax
    mov eax, [ebp+12]
    add eax, ebx
    mov eax, [eax]
    mov [ebp-6], eax
    mov eax, [ebp-5]
    push eax
    mov eax, [ebp-6]
    mov ebx, eax
    pop eax
    cmp eax, ebx
    setne al
    movzx eax, al
    test eax, eax
    jz else3
    mov eax, 0
    jmp str_eq_return
    mov eax, [ebp-5]
    push eax
    mov eax, 0
    mov ebx, eax
    pop eax
    cmp eax, ebx
    sete al
    movzx eax, al
    test eax, eax
    jz else5
    mov eax, 1
    jmp str_eq_return
    mov eax, [ebp-4]
    push eax
    mov eax, 1
    mov ebx, eax
    pop eax
    add eax, ebx
    mov [ebp-4], eax
    mov eax, 0
    jmp str_eq_return
    jmp endif4
else5:
endif4:
    jmp endif2
else3:
endif2:
    jmp while_start0
while_end1:
str_eq_return:
    mov esp, ebp
    pop ebp
    ret
    
cmd_ls:
    push ebp
    mov ebp, esp
    lea eax, [rel str_0]
    push eax
    call println
    add esp, 4
cmd_ls_return:
    mov esp, ebp
    pop ebp
    ret
    
cmd_cat:
    push ebp
    mov ebp, esp
    lea eax, [rel str_1]
    push eax
    call println
    add esp, 4
    lea eax, [rel str_2]
    push eax
    call println
    add esp, 4
cmd_cat_return:
    mov esp, ebp
    pop ebp
    ret
    
cmd_echo:
    push ebp
    mov ebp, esp
    lea eax, [rel str_3]
    push eax
    call println
    add esp, 4
cmd_echo_return:
    mov esp, ebp
    pop ebp
    ret
    
cmd_help:
    push ebp
    mov ebp, esp
    lea eax, [rel str_4]
    push eax
    call println
    add esp, 4
    lea eax, [rel str_5]
    push eax
    call println
    add esp, 4
    lea eax, [rel str_6]
    push eax
    call println
    add esp, 4
    lea eax, [rel str_7]
    push eax
    call println
    add esp, 4
    lea eax, [rel str_8]
    push eax
    call println
    add esp, 4
cmd_help_return:
    mov esp, ebp
    pop ebp
    ret
    
mininim_kernel_main:
    push ebp
    mov ebp, esp
    call serial_init
    mov eax, 10
    push eax
    call serial_putchar
    add esp, 4
    lea eax, [rel str_9]
    push eax
    call println
    add esp, 4
    lea eax, [rel str_10]
    push eax
    call println
    add esp, 4
    lea eax, [rel str_11]
    push eax
    call println
    add esp, 4
    mov eax, 10
    push eax
    call serial_putchar
    add esp, 4
    lea eax, [rel str_12]
    push eax
    call println
    add esp, 4
    lea eax, [rel str_13]
    push eax
    call println
    add esp, 4
    mov eax, 10
    push eax
    call serial_putchar
    add esp, 4
    lea eax, [rel str_14]
    push eax
    call serial_print
    add esp, 4
    lea eax, [rel str_15]
    push eax
    call println
    add esp, 4
    call cmd_ls
    mov eax, 10
    push eax
    call serial_putchar
    add esp, 4
    lea eax, [rel str_16]
    push eax
    call serial_print
    add esp, 4
    lea eax, [rel str_17]
    push eax
    call println
    add esp, 4
    call cmd_cat
    mov eax, 10
    push eax
    call serial_putchar
    add esp, 4
    lea eax, [rel str_18]
    push eax
    call serial_print
    add esp, 4
    lea eax, [rel str_19]
    push eax
    call println
    add esp, 4
    call cmd_echo
    mov eax, 10
    push eax
    call serial_putchar
    add esp, 4
    lea eax, [rel str_20]
    push eax
    call serial_print
    add esp, 4
    lea eax, [rel str_21]
    push eax
    call println
    add esp, 4
    call cmd_help
    mov eax, 10
    push eax
    call serial_putchar
    add esp, 4
    lea eax, [rel str_22]
    push eax
    call serial_print
    add esp, 4
while_start6:
    mov eax, 1
    test eax, eax
    jz while_end7
    jmp while_start6
while_end7:
mininim_kernel_main_return:
    mov esp, ebp
    pop ebp
    ret